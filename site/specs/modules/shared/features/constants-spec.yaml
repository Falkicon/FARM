@feature: constants
@module: shared
@priority: Medium
@status: planned
@dependencies: ["typescript", "dotenv"]

overview: |
  The Constants feature provides a centralized location for all shared
  configuration values, environment variables, and feature flags used
  across the frontend and backend modules. This ensures consistent
  configuration management and feature toggling throughout the application.

categories:
  configuration:
    description: "Application-wide configuration constants"
    location: "src/shared/constants/config"
    constants:
      API:
        BASE_URL:
          value: "process.env.API_BASE_URL || 'http://localhost:8000'"
          description: "Base URL for API endpoints"

        TIMEOUT:
          value: "30000"
          description: "Default API request timeout in milliseconds"

        RETRY_ATTEMPTS:
          value: "3"
          description: "Number of API retry attempts"

      AUTH:
        TOKEN_KEY:
          value: "'auth_token'"
          description: "Local storage key for auth token"

        REFRESH_KEY:
          value: "'refresh_token'"
          description: "Local storage key for refresh token"

        TOKEN_EXPIRY:
          value: "24 * 60 * 60 * 1000"
          description: "Token expiry duration in milliseconds"

      PAGINATION:
        DEFAULT_PAGE_SIZE:
          value: "20"
          description: "Default items per page"

        MAX_PAGE_SIZE:
          value: "100"
          description: "Maximum items per page"

  environment:
    description: "Environment-specific variables"
    location: "src/shared/constants/env"
    variables:
      required:
        - name: "NODE_ENV"
          type: "string"
          options: ["development", "production", "test"]

        - name: "API_BASE_URL"
          type: "string"
          format: "url"

        - name: "DATABASE_URL"
          type: "string"
          format: "connection-string"

      optional:
        - name: "LOG_LEVEL"
          type: "string"
          default: "info"
          options: ["error", "warn", "info", "debug"]

        - name: "ENABLE_METRICS"
          type: "boolean"
          default: "false"

  feature_flags:
    description: "Feature toggle definitions"
    location: "src/shared/constants/features"
    categories:
      UI_FEATURES:
        DARK_MODE:
          enabled: true
          description: "Enable dark mode theme"

        BETA_FEATURES:
          enabled: false
          description: "Enable beta features"

      API_FEATURES:
        RATE_LIMITING:
          enabled: true
          description: "Enable API rate limiting"

        CACHING:
          enabled: true
          description: "Enable API response caching"

validation:
  environment:
    - "Required variables must be present"
    - "Variable types must match definitions"
    - "URLs must be valid"
    - "Enum values must be valid"

  configuration:
    - "Values must match types"
    - "No hardcoded sensitive data"
    - "Must use environment variables"

documentation:
  standards:
    - "JSDoc comments for all constants"
    - "Usage examples"
    - "Type definitions"
    - "Default values"

  organization:
    - "Group by domain"
    - "Separate environment config"
    - "Feature flags isolation"

implementation:
  patterns:
    - name: "Environment Variables"
      tool: "dotenv"
      validation: "zod"

    - name: "Feature Flags"
      tool: "custom implementation"
      storage: "database/redis"

    - name: "Configuration"
      tool: "typescript const assertions"
      validation: "type-level"

security:
  requirements:
    - "No secrets in code"
    - "Environment validation"
    - "Secure defaults"
    - "Audit logging"

  practices:
    - "Use environment variables"
    - "Validate all inputs"
    - "Encrypt sensitive values"
    - "Regular security audits"

testing:
  approaches:
    - name: "Environment Tests"
      description: "Validate environment variables"
      tool: "jest"

    - name: "Configuration Tests"
      description: "Verify constant values"
      tool: "typescript"

    - name: "Feature Flag Tests"
      description: "Test feature toggles"
      tool: "jest"

deployment:
  environment_handling:
    development:
      source: ".env.development"
      validation: true

    production:
      source: "environment service"
      validation: true

    test:
      source: ".env.test"
      validation: true

maintenance:
  tasks:
    - "Regular value updates"
    - "Deprecation management"
    - "Documentation updates"
    - "Security audits"

  automation:
    - "Value validation"
    - "Documentation generation"
    - "Security scanning"

future_enhancements:
  - "Dynamic configuration management"
  - "Feature flag UI"
  - "Configuration versioning"
  - "Audit logging"
  - "Remote configuration"
