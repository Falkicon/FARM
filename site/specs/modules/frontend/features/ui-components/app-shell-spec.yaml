@feature: app-shell
@module: frontend
@priority: High
@status: implemented
@dependencies: ["lit", "lit/decorators", "universal-router"]

overview: |
  The App Shell component serves as the main application container, providing
  consistent layout, navigation handling, and client-side routing. It uses
  Light DOM for consistent style inheritance and integrates with the router
  for dynamic view management.

component_definition:
  tag_name: "app-shell"
  extends: "LitElement"
  dom_type: "Light DOM"
  description: "Main application shell component that handles routing and layout"

state_management:
  properties:
    currentView:
      type: "TemplateResult"
      decorator: "@state"
      privacy: "private"
      description: "Current view template to render in the main content area"

routing:
  implementation: "Universal Router"
  features:
    - "Client-side routing"
    - "History API integration"
    - "Link interception"
    - "404 handling"

  behaviors:
    navigation:
      - "Intercepts anchor clicks"
      - "Updates browser history"
      - "Resolves routes to views"
      - "Handles navigation errors"

layout_structure:
  elements:
    - name: "app-shell"
      class: "app-shell"
      purpose: "Main container"
      children:
        - name: "main-nav"
          class: "main-nav"
          purpose: "Navigation component"
        - name: "main"
          purpose: "Content area"
          content: "Dynamic view rendering"

lifecycle:
  initialization:
    - "Creates Light DOM root"
    - "Sets up event listeners"
    - "Performs initial route resolution"

  connected:
    - "Calls super.connectedCallback()"
    - "Updates route based on current path"
    - "Sets up navigation listeners"

  updates:
    - "Renders new view content"
    - "Updates browser history"
    - "Handles navigation errors"

event_handling:
  click:
    target: "window"
    delegation: true
    processing:
      - "Finds closest anchor element"
      - "Checks for internal links"
      - "Prevents default for internal navigation"
      - "Updates route and history"

  popstate:
    target: "window"
    processing:
      - "Updates route based on new path"

error_handling:
  scenarios:
    - error: "Navigation error"
      fallback: "Error: Page Not Found"
      logging: "Console error with details"

    - error: "Route not found"
      fallback: "Page Not Found"
      type: "404"

styling:
  approach: "Light DOM"
  rationale: "Consistent style inheritance"
  structure:
    - "app-shell: Container styles"
    - "main-nav: Navigation styles"
    - "main: Content area styles"

accessibility:
  requirements:
    - "Semantic HTML structure"
    - "Proper heading hierarchy"
    - "Keyboard navigation support"
    - "Focus management"

  landmarks:
    - "Navigation region (nav)"
    - "Main content region (main)"

performance:
  optimizations:
    - "Light DOM for reduced shadow boundaries"
    - "Efficient route resolution"
    - "Minimal re-renders"
    - "Event delegation"

testing:
  unit_tests:
    - "Route handling"
    - "Event listeners"
    - "Error scenarios"

  integration_tests:
    - "Navigation flow"
    - "History management"
    - "Component interaction"

  stories:
    default:
      description: "Basic app shell rendering"
      usage: |
        ```typescript
        <app-shell></app-shell>
        ```

    with_custom_content:
      description: "App shell with custom content"
      usage: |
        ```typescript
        <app-shell>
          <div style="padding: 20px;">
            <h1>Custom Content</h1>
            <p>Custom content example.</p>
          </div>
        </app-shell>
        ```

documentation:
  usage_example: |
    ```typescript
    import { AppShell } from './components/app-shell';

    // Register component (auto-registered via decorator)
    // Use in HTML
    <app-shell></app-shell>
    ```

  storybook:
    category: "Shell/AppShell"
    autodocs: true
    layout: "fullscreen"

future_enhancements:
  - "Transition animations between routes"
  - "Loading states for async routes"
  - "Route-based meta management"
  - "Nested routing support"
  - "Route-based code splitting"
