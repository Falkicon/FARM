@module: backend
@priority: High
@dependencies: ["fastify", "prisma", "typescript"]

overview: |
  The backend module provides a high-performance API server using Fastify,
  with type-safe database operations via Prisma, comprehensive security measures,
  and built-in monitoring capabilities.

core_components:
  server:
    framework: Fastify
    features:
      - Type-safe routes with TypeBox
      - Plugin architecture
      - Built-in compression
      - Automatic swagger documentation
      - Health check endpoints
      - Metrics collection

  database:
    orm: Prisma
    features:
      - Type-safe queries
      - Migration management
      - Connection pooling
      - Transaction support
      - Data seeding
      - Query optimization

security:
  middleware:
    - "@fastify/helmet for security headers"
    - "@fastify/cors for CORS"
    - "Rate limiting middleware"
    - "Authentication middleware"

  policies:
    cors:
      allowed_origins: ["http://localhost:3000"]
      methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
      credentials: true

    rate_limiting:
      window: "15 minutes"
      max_requests: 100

    content_security:
      default_src: ["'self'"]
      script_src: ["'self'"]
      style_src: ["'self'", "'unsafe-inline'"]

api_structure:
  - name: "Health Routes"
    path: "/health"
    purpose: "System health monitoring"

  - name: "Auth Routes"
    path: "/api/auth"
    purpose: "Authentication endpoints"

  - name: "User Routes"
    path: "/api/users"
    purpose: "User management"

  - name: "File Routes"
    path: "/api/files"
    purpose: "File operations"

  - name: "Metrics Routes"
    path: "/metrics"
    purpose: "System metrics collection"

testing:
  unit:
    tool: Vitest
    coverage_target: 80%

  integration:
    tool: Playwright
    focus_areas:
      - "API endpoint behavior"
      - "Database operations"
      - "Authentication flows"

  performance:
    tool: "autocannon"
    metrics:
      - "Requests per second"
      - "Latency percentiles"
      - "Error rates"

monitoring:
  metrics:
    - "Request count by endpoint"
    - "Response times"
    - "Error rates"
    - "Active connections"
    - "Database query times"

  logging:
    format: "JSON"
    levels: ["error", "warn", "info", "debug"]
    transport: "pino-pretty"
