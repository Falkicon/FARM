@module: processes
@version: 1.0.0
@priority: High

overview: |
  Specification for all development, build, and operational processes in the project,
  ensuring consistent workflows and quality standards across the team.

development_processes:
  code_workflow:
    feature_development:
      steps:
        - "Create feature branch from develop"
        - "Implement feature with tests"
        - "Run local validation suite"
        - "Create pull request"
        - "Address review feedback"
        - "Merge to develop"

    bug_fixes:
      steps:
        - "Create bugfix branch"
        - "Add regression test"
        - "Implement fix"
        - "Verify fix locally"
        - "Create pull request"

  quality_checks:
    pre_commit:
      - command: "npm run lint"
        purpose: "Code style validation"
      - command: "npm run typecheck"
        purpose: "Type checking"
      - command: "npm run test"
        purpose: "Unit tests"

    pre_push:
      - command: "npm run validate"
        purpose: "Full validation suite"

build_processes:
  development:
    steps:
      - command: "npm run dev"
        purpose: "Start development servers"
        components:
          - "Frontend (port 3000)"
          - "Backend (port 8000)"
          - "Storybook (port 6006)"

  production:
    steps:
      - command: "npm run build"
        purpose: "Build all artifacts"
        sequence:
          - "Clean dist directory"
          - "Build shared code"
          - "Build backend"
          - "Build frontend"
          - "Generate types"

    validation:
      - command: "npm run test:e2e"
        purpose: "End-to-end validation"
      - command: "npm run lighthouse"
        purpose: "Performance checks"

testing_processes:
  unit_testing:
    command: "npm run test"
    watch_mode: "npm run test:watch"
    coverage: "npm run test:coverage"
    locations:
      - "Colocated with source files"
      - "Shared test utilities in __tests__"

  integration_testing:
    command: "npm run test:integration"
    setup:
      - "Start test database"
      - "Run migrations"
      - "Seed test data"

  e2e_testing:
    command: "npm run test:e2e"
    prerequisites:
      - "Build application"
      - "Start servers"
      - "Prepare test data"

  component_testing:
    command: "npm run test:components"
    tools:
      - "Storybook"
      - "Playwright"
    aspects:
      - "Visual regression"
      - "Accessibility"
      - "Interactions"

deployment_processes:
  staging:
    trigger: "Push to develop"
    steps:
      - "Run full test suite"
      - "Build artifacts"
      - "Deploy to staging"
      - "Run smoke tests"

  production:
    trigger: "Release tag"
    steps:
      - "Create release branch"
      - "Run full validation"
      - "Build production artifacts"
      - "Deploy to production"
      - "Run health checks"

monitoring_processes:
  health_checks:
    frequency: "Every 5 minutes"
    endpoints:
      - "/health"
      - "/metrics"

  error_tracking:
    tools:
      - "Error logging"
      - "Performance monitoring"
      - "User analytics"

  alerts:
    conditions:
      - "Server errors > 1%"
      - "Response time > 500ms"
      - "Memory usage > 80%"

documentation_processes:
  api_docs:
    auto_generation:
      - command: "npm run docs:api"
        purpose: "Generate API documentation"
      - command: "npm run docs:types"
        purpose: "Generate type documentation"

  release_notes:
    steps:
      - "Collect changelog entries"
      - "Update version numbers"
      - "Generate release notes"
      - "Update documentation"

maintenance_processes:
  dependency_updates:
    frequency: "Weekly"
    steps:
      - "Run npm audit"
      - "Update non-breaking changes"
      - "Run test suite"
      - "Create update PR"

  database_maintenance:
    frequency: "Monthly"
    tasks:
      - "Run optimizations"
      - "Verify backups"
      - "Clean old data"

  performance_optimization:
    frequency: "Quarterly"
    tasks:
      - "Run performance audits"
      - "Analyze bundle sizes"
      - "Review API performance"
      - "Optimize assets"
